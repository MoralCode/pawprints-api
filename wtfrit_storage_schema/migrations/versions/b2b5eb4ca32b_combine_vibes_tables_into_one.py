"""combine vibes tables into one

Revision ID: b2b5eb4ca32b
Revises: dcf2b4956c84
Create Date: 2023-02-26 10:29:27.327918

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b2b5eb4ca32b'
down_revision = 'dcf2b4956c84'
branch_labels = None
depends_on = None


def upgrade() -> None:

    connection = op.get_bind()
    # Query the old table
    old_table = sa.Table('comment_vibes', sa.MetaData(), autoload=True, autoload_with=connection)
    old_table_data = connection.execute(sa.select([old_table]))

    
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comment_vibes')
    op.add_column('vibes', sa.Column('parent_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'vibes', 'vibes', ['parent_id'], ['id'])
    # ### end Alembic commands ###

    # Insert data into the new table
    new_table = sa.Table('vibes', sa.MetaData(), autoload=True, autoload_with=connection)
    for row in old_table_data:
        connection.execute(new_table.insert().values(parent_id=row['parent_id'], contents=row['contents'], sentiment=row['sentiment']))


   

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'vibes', type_='foreignkey')
    op.drop_column('vibes', 'parent_id')
    op.create_table('comment_vibes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('parent_id', sa.INTEGER(), nullable=True),
    sa.Column('contents', sa.TEXT(), nullable=False),
    sa.Column('sentiment', sa.INTEGER(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
